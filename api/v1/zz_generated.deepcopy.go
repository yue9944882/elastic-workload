// +build !ignore_autogenerated

/*
Copyright 2021.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionStrategyClassful) DeepCopyInto(out *DistributionStrategyClassful) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionStrategyClassful.
func (in *DistributionStrategyClassful) DeepCopy() *DistributionStrategyClassful {
	if in == nil {
		return nil
	}
	out := new(DistributionStrategyClassful)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionStrategyEven) DeepCopyInto(out *DistributionStrategyEven) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionStrategyEven.
func (in *DistributionStrategyEven) DeepCopy() *DistributionStrategyEven {
	if in == nil {
		return nil
	}
	out := new(DistributionStrategyEven)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionStrategyLimitRange) DeepCopyInto(out *DistributionStrategyLimitRange) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionStrategyLimitRange.
func (in *DistributionStrategyLimitRange) DeepCopy() *DistributionStrategyLimitRange {
	if in == nil {
		return nil
	}
	out := new(DistributionStrategyLimitRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionStrategyWeighted) DeepCopyInto(out *DistributionStrategyWeighted) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionStrategyWeighted.
func (in *DistributionStrategyWeighted) DeepCopy() *DistributionStrategyWeighted {
	if in == nil {
		return nil
	}
	out := new(DistributionStrategyWeighted)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticWorkload) DeepCopyInto(out *ElasticWorkload) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticWorkload.
func (in *ElasticWorkload) DeepCopy() *ElasticWorkload {
	if in == nil {
		return nil
	}
	out := new(ElasticWorkload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticWorkload) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticWorkloadBudgetStrategy) DeepCopyInto(out *ElasticWorkloadBudgetStrategy) {
	*out = *in
	if in.LimitRange != nil {
		in, out := &in.LimitRange, &out.LimitRange
		*out = new(DistributionStrategyLimitRange)
		**out = **in
	}
	if in.Classful != nil {
		in, out := &in.Classful, &out.Classful
		*out = new(DistributionStrategyClassful)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticWorkloadBudgetStrategy.
func (in *ElasticWorkloadBudgetStrategy) DeepCopy() *ElasticWorkloadBudgetStrategy {
	if in == nil {
		return nil
	}
	out := new(ElasticWorkloadBudgetStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticWorkloadDistributionStrategy) DeepCopyInto(out *ElasticWorkloadDistributionStrategy) {
	*out = *in
	if in.Even != nil {
		in, out := &in.Even, &out.Even
		*out = new(DistributionStrategyEven)
		**out = **in
	}
	if in.Weighted != nil {
		in, out := &in.Weighted, &out.Weighted
		*out = new(DistributionStrategyWeighted)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticWorkloadDistributionStrategy.
func (in *ElasticWorkloadDistributionStrategy) DeepCopy() *ElasticWorkloadDistributionStrategy {
	if in == nil {
		return nil
	}
	out := new(ElasticWorkloadDistributionStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticWorkloadList) DeepCopyInto(out *ElasticWorkloadList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ElasticWorkload, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticWorkloadList.
func (in *ElasticWorkloadList) DeepCopy() *ElasticWorkloadList {
	if in == nil {
		return nil
	}
	out := new(ElasticWorkloadList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticWorkloadList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticWorkloadPlacementRef) DeepCopyInto(out *ElasticWorkloadPlacementRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticWorkloadPlacementRef.
func (in *ElasticWorkloadPlacementRef) DeepCopy() *ElasticWorkloadPlacementRef {
	if in == nil {
		return nil
	}
	out := new(ElasticWorkloadPlacementRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticWorkloadSpec) DeepCopyInto(out *ElasticWorkloadSpec) {
	*out = *in
	in.Target.DeepCopyInto(&out.Target)
	out.PlacementRef = in.PlacementRef
	in.DistributionStrategy.DeepCopyInto(&out.DistributionStrategy)
	in.BudgetStrategy.DeepCopyInto(&out.BudgetStrategy)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticWorkloadSpec.
func (in *ElasticWorkloadSpec) DeepCopy() *ElasticWorkloadSpec {
	if in == nil {
		return nil
	}
	out := new(ElasticWorkloadSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticWorkloadStatus) DeepCopyInto(out *ElasticWorkloadStatus) {
	*out = *in
	if in.LastScheduleTime != nil {
		in, out := &in.LastScheduleTime, &out.LastScheduleTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CurrentDistribution != nil {
		in, out := &in.CurrentDistribution, &out.CurrentDistribution
		*out = make([]ElasticWorkloadStatusDistribution, len(*in))
		copy(*out, *in)
	}
	if in.ExpectedDistribution != nil {
		in, out := &in.ExpectedDistribution, &out.ExpectedDistribution
		*out = make([]ElasticWorkloadStatusDistribution, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticWorkloadStatus.
func (in *ElasticWorkloadStatus) DeepCopy() *ElasticWorkloadStatus {
	if in == nil {
		return nil
	}
	out := new(ElasticWorkloadStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticWorkloadStatusDistribution) DeepCopyInto(out *ElasticWorkloadStatusDistribution) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticWorkloadStatusDistribution.
func (in *ElasticWorkloadStatusDistribution) DeepCopy() *ElasticWorkloadStatusDistribution {
	if in == nil {
		return nil
	}
	out := new(ElasticWorkloadStatusDistribution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticWorkloadTarget) DeepCopyInto(out *ElasticWorkloadTarget) {
	*out = *in
	if in.Inline != nil {
		in, out := &in.Inline, &out.Inline
		*out = new(ElasticWorkloadTargetInline)
		(*in).DeepCopyInto(*out)
	}
	if in.Import != nil {
		in, out := &in.Import, &out.Import
		*out = new(ElasticWorkloadTargetImport)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticWorkloadTarget.
func (in *ElasticWorkloadTarget) DeepCopy() *ElasticWorkloadTarget {
	if in == nil {
		return nil
	}
	out := new(ElasticWorkloadTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticWorkloadTargetImport) DeepCopyInto(out *ElasticWorkloadTargetImport) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticWorkloadTargetImport.
func (in *ElasticWorkloadTargetImport) DeepCopy() *ElasticWorkloadTargetImport {
	if in == nil {
		return nil
	}
	out := new(ElasticWorkloadTargetImport)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticWorkloadTargetInline) DeepCopyInto(out *ElasticWorkloadTargetInline) {
	*out = *in
	in.RawExtension.DeepCopyInto(&out.RawExtension)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticWorkloadTargetInline.
func (in *ElasticWorkloadTargetInline) DeepCopy() *ElasticWorkloadTargetInline {
	if in == nil {
		return nil
	}
	out := new(ElasticWorkloadTargetInline)
	in.DeepCopyInto(out)
	return out
}
